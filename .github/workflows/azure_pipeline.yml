name: Azure Pipeline

on:
  push:
    branches:
      - main
      
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      WEB_APP_NAME: ${{ secrets.WEB_APP_NAME }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install EF Tools
      run: dotnet tool install --global dotnet-ef --version 7.0.13

    - name: install Azure CLI
      run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # how to set up the yaml file with azure & github secrets: 
    # https://learn.microsoft.com/en-us/azure/azure-sql/database/connect-github-actions-sql-db?view=azuresql&tabs=userlevel
    - name: Setup Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create EF bundle
      run: dotnet ef migrations bundle --self-contained -r linux-x64 --project ./src/Chirp.Web

    - name: Apply EF migrations
      run: |
        CONNECTION_STRING=$(az webapp config connection-string list --name $WEB_APP_NAME --resource-group $RESOURCE_GROUP --query "[0].value" --output tsv)
        # https://learn.microsoft.com/en-us/ef/core/managing-schemas/migrations/applying?tabs=dotnet-core-cli#bundles
        chmod +x efbundle
        ./efbundle --connection "$CONNECTION_STRING"

    - name: Logout of Azure CLI
      run: az logout

    - name: Build with dotnet
      run: dotnet build src/Chirp.Web --configuration Release

    - name: dotnet publish
      run: dotnet publish src/Chirp.Web -c Release -o ${{env.DOTNET_ROOT}}/myapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'bdsagroup10chirprazor'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9E47BF3083E44D9B9B09C495395E44EF }}
          package: .