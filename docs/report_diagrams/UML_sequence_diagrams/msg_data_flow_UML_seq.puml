@startuml
header Sequence Diagram for Message- and Datataflow
Title Accessing Public Timeline As An Unauthorized User


actor "Unauthorized User" as UnauthorizedUser
participant "Webbrowser" as Browser
participant "Chirp.Web" as ChirpWeb
participant "Cheep Repository" as CheepRepo
collections DisplayedCheeps as CheepsList
entity cheepDTO as CheepDTO
entity reactionDTO as ReactionDTO

UnauthorizedUser -> Browser: Enters website's URL
Browser -> ChirpWeb: HTTP Request: GET URL

ChirpWeb -> CheepRepo: Call GetSome() for current page\n to retrieve up to 32 cheeps
CheepRepo -> CheepDTO: Sends authorname, message \n and timestamp for each cheep
CheepDTO -> CheepsList: Added with a cheep's \n authorname, message and timestamp
CheepsList -> ChirpWeb: Returns with up to 32 cheeps
|||
alt If YouTube link exists in cheep's message
    ChirpWeb -> YouTube: Requests video embed HTML via iFrame
    YouTube --> ChirpWeb: Returns video-embed HTML page
end
|||
ChirpWeb -> ReactionDTO: Call GetCheepsUpvoteCountsFromCheepID()
Return Each upvote's cheepId, userId, and reactionType
ChirpWeb -> ReactionDTO: Call GetCheepsDownvoteCountsFromCheepID()
Return Each downvote's cheepId, userId, and reactionType
|||

ChirpWeb -> GitHub: Requests GitHub image for each cheep's author
alt If GitHub user exists
    GitHub --> ChirpWeb: Returns author's GitHub image
else If GitHub user does not exist
    GitHub --> ChirpWeb: Returns a GitHub default image
end
|||

ChirpWeb -> ChirpWeb: Get pagination-info

ChirpWeb --> Browser: HTTP Response: Content-type text/html,\nContent Public.cshtml & BasePageModel.cshtml
|||

Browser -> ChirpWeb: HTTP Request: GET CSS
ChirpWeb --> Browser: HTTP Response: text/css with style.css
Browser -> Browser: Renders web-page
Browser --> UnauthorizedUser: Shows rendered web-page
@enduml