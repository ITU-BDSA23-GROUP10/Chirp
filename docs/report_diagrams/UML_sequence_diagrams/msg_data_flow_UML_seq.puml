@startuml
header Sequence Diagram for Message- and Datataflow
Title Accessing Public Timeline As An Unauthorized User


actor "Unauthorized User" as UnauthorizedUser
participant "Webbrowser" as Browser
participant "Chirp.Web" as ChirpWeb
participant "Cheep Repository" as CheepRepo
participant "Reaction Repository" as ReactionRepo
collections DisplayedCheeps as CheepsList
entity cheepDTO as CheepDTO
box "External services" #LightBlue
    participant YouTube as YouTube
    participant GitHub as GitHub
end box


UnauthorizedUser -> Browser: Enters website's URL
Browser -> ChirpWeb: HTTP Request: GET URL

ChirpWeb -> CheepRepo: Call GetSome() for current page to retrieve\n up to 32 cheeps and count of all cheeps
CheepRepo -> CheepDTO: Sends authorname, message and timestamp for each cheep
CheepDTO --> CheepsList: Added with a cheep's authorname,\nmessage and timestamp
CheepsList --> ChirpWeb: Returns with up to 32 cheeps
CheepRepo --> ChirpWeb: Count of all cheeps for pagination
|||
alt If YouTube link exists in cheep's message
    ChirpWeb -> YouTube: Requests video-embed HTML via iFrame
    Return Video-embed HTML page
end
|||
ChirpWeb -> ReactionRepo: Call GetCheepsUpvoteCountsFromCheepID()
Return Count of upvotes for each cheep in DisplayedCheeps
ChirpWeb -> ReactionRepo: Call GetCheepsDownvoteCountsFromCheepID()
Return Count of downvotes for each cheep in DisplayedCheeps
|||

ChirpWeb -> GitHub: Requests GitHub image for each cheep's author
alt If GitHub user exists
    GitHub --> ChirpWeb: Returns author's GitHub image
else If GitHub user does not exist
    GitHub --> ChirpWeb: Returns a GitHub default image
end
|||

ChirpWeb --> Browser: HTTP Response: Content-type text/html,\nContent Public.cshtml & BasePageModel.cshtml
|||

Browser -> ChirpWeb: HTTP Request: GET CSS
ChirpWeb --> Browser: HTTP Response: Content-type text/css,\nContent style.css
Browser -> Browser: Renders web-page
Browser --> UnauthorizedUser: Shows rendered web-page
@enduml