@page "/"
@model Chirp.Web.Pages.PublicModel
@using System
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
}

<div>
    <h2> Public Timeline </h2>

    @if (User.Identity is not null && User.Identity.IsAuthenticated)
    {
    @if((ViewData["CheepTooShort"] as string) == "true")//(ViewData["CheepTooShort"] == "true")
    {
        <div class="alert alert-warning" role="alert">
            Your cheep is too short!
        </div>
        ViewData["CheepTooShort"] = "false";
    }
    <div class="cheepbox">
            <h3>What's on your mind @(User.Identity.Name)?</h3>
            <form class="share-cheep" method="post">
                    <textarea type="text" asp-for="NewCheep.Message"></textarea>
                    <input type="submit" value="Share">
            </form>
    </div>
    }


    @if (Model.DisplayedCheeps.Any())
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in Model.DisplayedCheeps)
            {
                var upVoteCount = Model.FindUpvoteCountByCheepID(cheep.id).Result;
                var downVoteCount = Model.FindDownvoteCountByCheepID(cheep.id).Result;
                <li>
                    <div class="activity">
                        <img src="https://avatars.githubusercontent.com/@cheep.Author"/>
                        <div>
                            <strong><a href="/@cheep.Author">@cheep.Author</a></strong>
                            <small>&mdash; @cheep.Timestamp</small>
                            <!-- YouTube Link Check and Embed, hashtags -->
                            @{
                                string Message;
                                var embedUrl = Model.GetYouTubeEmbed(cheep.Message, out Message);

                                List<string> hashTags;
                                string MessageWithHashtags;
                                hashTags = Model.GetHashTags(Message, out MessageWithHashtags);    
                            }

                            @if (embedUrl != null)
                            {
                                <iframe width="560" height="315" src="@embedUrl" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                            }

                            <p style="white-space: pre-line">@MessageWithHashtags</p>

                            @if(hashTags != null)
                            {
                                foreach(var hashTag in hashTags)
                                {
                                    var displayTag = hashTag.Replace("/hashtag/", "#");
                                    <a rel="ugc nofollow" class="hashtag" href="@hashTag">@displayTag</a>
                                }
                            }

                            <div class="flex-it">
                                @if (User?.Identity is not null && User.Identity.IsAuthenticated)
                                {  
                                    //get the id of the logged in user
                                    var userName = User?.Identity?.Name ?? "default";                
                                    var userId = Model.FindUserIDByName(userName).Result;
                                    var authorId = Model.FindUserIDByName(@cheep.Author).Result;
                                    var isFollowing = Model.CheckIfFollowed(userId, authorId).Result;
                                    @* var upVoteCount = Model.FindUpvoteCountByCheepID(cheep.id).Result;
                                    var downVoteCount = Model.FindDownvoteCountByCheepID(cheep.id).Result; *@
                                    // Inspired by StackOverflow user: https://stackoverflow.com/a/59721230
                                    //@if() Add if statement to check if you are following that person
                                    if(userId == authorId)
                                    {
                                        //no form is shown since the logged in user shouldnt follow themselves
                                    }
                                    else if(userId != authorId)
                                    {   
                                        if(isFollowing)
                                        {
                                            <form asp-page-handler="Unfollow" method="post" class="unfollowForm">
                                                <input type="hidden" name="Author" value="@cheep.Author"/>
                                                <button type="submit" class="flwbtn unfollow"> Unfollow </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form asp-page-handler="Follow" method="post" class="followForm">
                                                <input type="hidden" name="author" value="@cheep.Author"/>
                                                <button type="submit" class="flwbtn follow"> Follow </button>
                                            </form>
                                        }
                                    }

                                    // reaction
                                    <form asp-page-handler="Reaction" method="post" >
                                        <input type="hidden" name="NewcheepId.id" value="@cheep.id"/>
                                        <input type="hidden" name="NewReaction.Reaction" value="Upvote"/>
                                        <button class="votebtn"> Upvote (@upVoteCount) </button>
                                    </form>
                                    <form asp-page-handler="Reaction" method="post" >
                                        <input type="hidden" name="NewcheepId.id" value="@cheep.id"/>
                                        <input type="hidden" name="NewReaction.Reaction" value="Downvote"/>
                                        <button class="votebtn"> Downvote (@downVoteCount) </button>
                                    </form>
                                } else
                                {
                                <span class="votebtnn">upvote (@upVoteCount)</span> 
                                <span class="votebtnn">Downvote (@downVoteCount)</span> 
                                }
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <em>There are no cheeps so far.</em>
    }

    @await Component.InvokeAsync("Pagination")
</div>

@section scripts {
<script>
    $(document).ready(function() {
    $(".followForm, .unfollowForm").on('submit', function(e) {
        e.preventDefault();
        let form = $(this);
        let url = form.attr('action');
        let button = form.find('button');
        
        $.ajax({
            type: "POST",
            url: url,
            data: form.serialize(),
            success: function(response)
            {
                if(response.success) {
                    let newAction = button.hasClass('follow') ? 'Unfollow' : 'Follow';
                    let newClass = button.hasClass('follow') ? 'unfollow' : 'follow';
                    let newHandler = button.hasClass('follow') ? 'Unfollow' : 'Follow';
                    button.text(newAction);
                    button.removeClass('follow unfollow').addClass(newClass);
                    
                    // Update form's asp-page-handler attribute
                    form.attr('asp-page-handler', newHandler);

                    // Update form's class
                    form.removeClass('followForm unfollowForm').addClass(newClass + 'Form');

                    // Update form's action attribute
                    form.attr('action', '/?handler=' + newHandler);
                }
            },
            error: function(error) {
                console.log('Error:', error);
            }
        });

        return false;  // prevent form from submitting normally
    });
});
</script>
}
                                            